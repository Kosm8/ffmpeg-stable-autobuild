name: Alternative Custom Build
on:
  workflow_dispatch:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v4
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
          
      - name: Install dependencies
        run: ./dependencies.sh
        
      - name: Move ffmpeg-windows-build-helpers
        run: mv -v ./ffmpeg-windows-build-helpers/* ./
        
      - name: Compile FFmpeg 4.3.2 using ffmpeg-windows-build-helpers
        run: ./cross_compile_ffmpeg.sh --ffmpeg-source-dir=$GITHUB_WORKSPACE/ffmpeg-source --gcc-cpu-count=2 --build-dependencies=y --git-get-latest=y --disable-nonfree=n --prefer-stable=y --build-amd-amf=n --build-intel-qsv=n --build-libmxf=n --sandbox-ok=y --compiler-flavors=win32
        
      - name: 7-Zip FFmpeg 4.3.2 win32 custom nonfree
        working-directory: ffmpeg-source
        run: 7z a ffmpeg-4.3.2-win32-custom-nonfree.7z ffmpeg.exe ffprobe.exe ffplay.exe -mx=9
          
      - name: Upload FFmpeg 4.3.2 win32 custom nonfree
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg-4.3.2-win32-custom-nonfree
          path: ffmpeg-source/ffmpeg-4.3.2-win32-custom-nonfree.7z
          
  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download all builds
        uses: actions/download-artifact@v2
        
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "#${{ github.run_number }}"
          release_name: "4.3.2 #${{ github.run_number }}"
          draft: false
          prerelease: false
          
      - name: Upload FFmpeg 4.3.2 win32 custom nonfree Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ffmpeg-4.3.2-win32-custom-nonfree/ffmpeg-4.3.2-win32-custom-nonfree.7z
          asset_name: ffmpeg-4.3.2-win32-custom-nonfree.7z
          asset_content_type: application/x-7z-compressed
